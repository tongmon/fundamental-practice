<Window x:Class="TreeView_Improved.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TreeView_Improved"
        mc:Ignorable="d"
        Title="TreeView_Improved" Height="450" Width="800">
    
    <!-- Loaded는 윈도우가 뜨기 전에 실행되는 이벤트로 해당 이벤트에 수행될 함수 이름을 적으면 된다. -->
    <Grid>

        <!-- TreeView 항목의 이름을 FolderView로 한다. -->
        <!-- TreeView UI와 DirectoryStructureViewModel의 Items 항목을 바인딩시킨다. -->
        <TreeView x:Name="FolderView" ItemsSource="{Binding Items}">
            <!-- TreeView의 각 노드에 설정될 스타일을 설정한다. -->
            <TreeView.ItemContainerStyle>
                <!-- TreeView에 보여질 항목의 형태를 TreeViewItem으로 한다. -->
                <Style TargetType="{x:Type TreeViewItem}">
                    <!-- Setter로 TreeView가 펼쳐지거나 축소될 때 발생되는 이벤트인 IsExpanded와 코드에 직접 짜여진 IsExpanded 함수를 TwoWay로 바인딩시킨다. -->
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                </Style>
            </TreeView.ItemContainerStyle>

            <TreeView.ItemTemplate>
                <!-- TreeView의 각 자식 항목에 설정될 데이터템플릿을 설정한다. 설정할 때 부모, 자식 관계가 있는 TreeView UI이기에 HierarchicalDataTemplate을 사용했다. -->
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal">
                        <!-- Image의 리소스 경로를 바인딩으로 설정하여 코드에서 준 값으로 이용한다. 현재 Type이 바인딩되어 있기에 Type에 따라 다른 이미지가 도출된다.-->                       
                        <!-- Converter를 지정하여 HeaderToImageConverter의 instance에 있는 Converter 함수를 연결해준다. -->
                        <!-- 결과적으로 Type형을 Bitmap으로 변환시켜주는 UI용 형변환이 이루어진다고 보면된다. -->
                        <Image Width="20" Margin="3" Source="{Binding Type, Converter={x:Static local:HeaderToImageConverter.Instance}}"/>
                        <!-- TextBlock의 Text값을 바인딩으로 설정하여 코드에서 준 값으로 이용한다. -->
                        <TextBlock VerticalAlignment="Center" Text="{Binding Name}"/>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            
        </TreeView>
    </Grid>
</Window>
